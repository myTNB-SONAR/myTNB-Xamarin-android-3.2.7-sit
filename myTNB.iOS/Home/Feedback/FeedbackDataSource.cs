using System; using System.Collections.Generic; using CoreGraphics; using Foundation; using myTNB.Enums;

using myTNB.Model;
using myTNB.Model.Feedback; using UIKit;  namespace myTNB.Home.Feedback {     public class FeedbackDataSource : UITableViewSource     {         List<FeedbackRowModel> _feedbacks = new List<FeedbackRowModel>();         List<SubmittedFeedbackDataModel> _submittedFeedbackList = new List<SubmittedFeedbackDataModel>();         bool _isFromPrelogin;         bool _isBcrmAvailable;         FeedbackViewController _controller;          public FeedbackDataSource(FeedbackViewController controller, List<SubmittedFeedbackDataModel> submittedFeedbackList, bool isFromPrelogin, bool isBcrmAvailable)         {             if (DataManager.DataManager.SharedInstance.FeedbackCategory != null)              {                 foreach (var f in DataManager.DataManager.SharedInstance.FeedbackCategory)                 {                     Console.WriteLine("FeedbackCategoryId: " + f.FeedbackCategoryId);                     Console.WriteLine("FeedbackCategoryName: " + f.FeedbackCategoryName);                      FeedbackRowModel feedBackRowModel = new FeedbackRowModel();                      feedBackRowModel.Name = f.FeedbackCategoryName;                     feedBackRowModel.ID = f.FeedbackCategoryId;                      if (f.FeedbackCategoryId == "1")                     {                         feedBackRowModel.Icon = "Feedback-Bill";                         feedBackRowModel.Subtitle = "Lodge your bill and account issues here.";                     }                     else if (f.FeedbackCategoryId == "2")                     {                         feedBackRowModel.Icon = "Feedback-Streetlamp";                         feedBackRowModel.Subtitle = "Spot a faulty street lamp? Report it here.";                     }                     else if (f.FeedbackCategoryId == "3")                     {                         feedBackRowModel.Icon = "Feedback-Others";                         feedBackRowModel.Subtitle = "Suggestions, complaints, and other inquiries";                     }                     _feedbacks.Add(feedBackRowModel);                 }             }              FeedbackRowModel submittedfeedBackRowModel = new FeedbackRowModel();             submittedfeedBackRowModel.Name = "Submitted Feedback";             submittedfeedBackRowModel.ID = "4";             submittedfeedBackRowModel.Icon = "Feedback-Submitted";             submittedfeedBackRowModel.Subtitle = "View status updates on your feedback here.";             _feedbacks.Add(submittedfeedBackRowModel);              //Console.WriteLine("Feedback category count" + DataManager.DataManager.SharedInstance.FeedbackCategory.d.data);                                      //FeedbackSection sendFeedbackSection = new FeedbackSection();             //sendFeedbackSection.SectionTitle = "Send Feedback";             //sendFeedbackSection.Contents = new List<string>();             //sendFeedbackSection.Contents.Add("Bill Related");             //sendFeedbackSection.Contents.Add("Faulty TNB Street Lamp");             //sendFeedbackSection.Contents.Add("Others");             //sendFeedbackSection.Contents.Add("Submitted Feedback");              //sendFeedbackSection.SubContents = new List<string>();             //sendFeedbackSection.SubContents.Add("Lodge your bill and account issues here.");             //sendFeedbackSection.SubContents.Add("Spot a faulty street lamp? Report it here.");             //sendFeedbackSection.SubContents.Add("Suggestions, complaints, and other inquiries.");             //sendFeedbackSection.SubContents.Add("View status updates on your feedback here.");              //sendFeedbackSection.Icons = new List<string>();             //sendFeedbackSection.Icons.Add("Feedback-Bill");             //sendFeedbackSection.Icons.Add("Feedback-Streetlamp");             //sendFeedbackSection.Icons.Add("Feedback-Others");             //sendFeedbackSection.Icons.Add("Feedback-Submitted");              //FeedbackSection viewFeedbackSection = new FeedbackSection();             //viewFeedbackSection.SectionTitle = "View Feedback";             //viewFeedbackSection.Contents = new List<string>();             //viewFeedbackSection.Contents.Add("Submitted Feedback");             //viewFeedbackSection.SubContents = new List<string>();             //viewFeedbackSection.SubContents.Add("View status updates on your feedback here");             //viewFeedbackSection.Icons = new List<string>();             //viewFeedbackSection.Icons.Add("Feedback-Submitted");                //_feedbacks.Add(viewFeedbackSection);              _controller = controller;             _submittedFeedbackList = submittedFeedbackList;             _isFromPrelogin = isFromPrelogin;             _isBcrmAvailable = isBcrmAvailable;         }          public override nint NumberOfSections(UITableView tableView)         {             return 1;         }          public override nint RowsInSection(UITableView tableview, nint section)         {
            //return _feedbacks[(int)section].Contents.Count;
            return _feedbacks.Count;         }          //public override UIView GetViewForHeader(UITableView tableView, nint section)         //{         //    UIView view = new UIView(new CGRect(0, 0, tableView.Frame.Width, 48));         //    view.BackgroundColor = myTNBColor.SectionGrey();          //    var lblSectionTitle = new UILabel(new CGRect(18, 16, tableView.Frame.Width, 18));         //    lblSectionTitle.Text = _feedbacks[(int)section].SectionTitle;         //    lblSectionTitle.Font = myTNBFont.MuseoSans16();         //    lblSectionTitle.TextColor = myTNBColor.PowerBlue();          //    view.Add(lblSectionTitle);          //    return view;         //}          public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)         {

            //var content = _feedbacks[(int)indexPath.Section].Contents[indexPath.Row];
            //var subContent = _feedbacks[(int)indexPath.Section].SubContents[indexPath.Row];
            //var iconName = _feedbacks[(int)indexPath.Section].Icons[indexPath.Row];
            var feedBack = _feedbacks[indexPath.Row];              var cell = tableView.DequeueReusableCell("FeedbackViewCell", indexPath) as FeedbackViewCell;              cell.lblTitle.Text = feedBack.Name;             cell.lblSubtTitle.Text = feedBack.Subtitle;             cell.imgViewIcon.Image = UIImage.FromBundle(feedBack.Icon);              if (indexPath.Section == 1) {                 if (_submittedFeedbackList != null) {                     cell.lblCount.Hidden = false;                     cell.lblCount.Text = _submittedFeedbackList.Count.ToString();                 }             }             //cell.viewLine.Hidden = false;             //cell.SeparatorInset = new UIEdgeInsets(0, 0, 0, 0);             //cell.LayoutMargins = new UIEdgeInsets(0, 0, 0, 0);             cell.SelectionStyle = UITableViewCellSelectionStyle.None;              return cell;         }          //public override nfloat GetHeightForHeader(UITableView tableView, nint section)         //{         //    return 48;         //}          public override void RowSelected(UITableView tableView, NSIndexPath indexPath)         {             var feedback = _feedbacks[indexPath.Row];              if (indexPath.Section == 0)
            {
                UIStoryboard storyBoard = UIStoryboard.FromName("Feedback", null);
                FeedbackEntryViewController feedbackEntryViewController =
                    storyBoard.InstantiateViewController("FeedbackEntryViewController") as FeedbackEntryViewController;                 feedbackEntryViewController.FeedbackID = feedback.ID;                 feedbackEntryViewController.IsLoggedIn = !_isFromPrelogin;
                var navController = new UINavigationController(feedbackEntryViewController);
                _controller.PresentViewController(navController, true, null);
            }
            else
            {
                _controller.DisplaySubmittedFeedback();
            }              /*if (!_isFromPrelogin)             {                 if (indexPath.Section == 0)                 {                     LoginFeedbackNavigateToDetailVC(feedback.ID);
                }             }             else             {                 if (indexPath.Section == 0)                 {                     NonLoginFeedbackNavigateToDetailVC(feedback.ID);
                }             }              if (indexPath.Section == 1 && indexPath.Row == 0) {                 _controller.DisplaySubmittedFeedback();             }*/          }          /// <summary>         /// Shows the BRCMA lert.         /// </summary>         internal void ShowBRCMAlert()         {             var status = DataManager.DataManager.SharedInstance.SystemStatus?.Find(x => x.SystemType == SystemEnum.BCRM);             if (status != null && !string.IsNullOrEmpty(status?.DowntimeTextMessage))             {                 ToastHelper.DisplayAlertView(_controller, "ErrorTitle".Translate(), status?.DowntimeTextMessage);             }         }          internal void LoginFeedbackNavigateToDetailVC(string feedbackID)         {             if (!_isBcrmAvailable && feedbackID != "4")             {
                ShowBRCMAlert();             }             else             {                 if (feedbackID == "1")                 {                     UIStoryboard storyBoard = UIStoryboard.FromName("Feedback", null);                     LoginBillRelatedFeedbackViewController loginBillRelatedVC =                         storyBoard.InstantiateViewController("LoginBillRelatedFeedbackViewController") as LoginBillRelatedFeedbackViewController;                     var navController = new UINavigationController(loginBillRelatedVC);                     DataManager.DataManager.SharedInstance.CurrentSelectedFeedAccountNoIndex = DataManager.DataManager.SharedInstance.CurrentSelectedAccountIndex;                     _controller.PresentViewController(navController, true, null);                 }                  if (feedbackID == "2")                 {                     UIStoryboard storyBoard = UIStoryboard.FromName("Feedback", null);                     LoginFaultyStreetLampFeedbackViewController loginFaultyStreetLampVC =                         storyBoard.InstantiateViewController("LoginFaultyStreetLampFeedbackViewController") as LoginFaultyStreetLampFeedbackViewController;                     var navController = new UINavigationController(loginFaultyStreetLampVC);                     DataManager.DataManager.SharedInstance.CurrentSelectedStateForFeedbackIndex = -1;                     _controller.PresentViewController(navController, true, null);                 }                  if (feedbackID == "3")                 {                     UIStoryboard storyBoard = UIStoryboard.FromName("Feedback", null);                     LoginOthersFeedbackViewController loginOthersFeedbackVC =                         storyBoard.InstantiateViewController("LoginOthersFeedbackViewController") as LoginOthersFeedbackViewController;                     DataManager.DataManager.SharedInstance.CurrentSelectedFeedbackTypeIndex = 1;                     var navController = new UINavigationController(loginOthersFeedbackVC);                     _controller.PresentViewController(navController, true, null);                 }             }              if (feedbackID == "4")             {                 _controller.DisplaySubmittedFeedback();             }         }          internal void NonLoginFeedbackNavigateToDetailVC(string feedbackID)         {             if (!_isBcrmAvailable && feedbackID != "4")             {                 ShowBRCMAlert();             }             else             {                 if (feedbackID == "1")                 {                     UIStoryboard storyBoard = UIStoryboard.FromName("Feedback", null);                     NonLoginBillRelatedFeedbackViewController nonloginBillRelatedVC =                         storyBoard.InstantiateViewController("NonLoginBillRelatedFeedbackViewController") as NonLoginBillRelatedFeedbackViewController;                     var navController = new UINavigationController(nonloginBillRelatedVC);                     _controller.PresentViewController(navController, true, null);                 }                 if (feedbackID == "2")                 {                     UIStoryboard storyBoard = UIStoryboard.FromName("Feedback", null);                     NonLoginFaultyStreetLampFeedbackViewController nonloginFaultyStreetLampVC =                         storyBoard.InstantiateViewController("NonLoginFaultyStreetLampFeedbackViewController") as NonLoginFaultyStreetLampFeedbackViewController;                     var navController = new UINavigationController(nonloginFaultyStreetLampVC);                     DataManager.DataManager.SharedInstance.CurrentSelectedStateForFeedbackIndex = -1;                     _controller.PresentViewController(navController, true, null);                 }                  if (feedbackID == "3")                 {                     UIStoryboard storyBoard = UIStoryboard.FromName("Feedback", null);                     NonLoginOthersFeedbackViewController nonloginOthersFeedbackVC =                         storyBoard.InstantiateViewController("NonLoginOthersFeedbackViewController") as NonLoginOthersFeedbackViewController;                     DataManager.DataManager.SharedInstance.CurrentSelectedFeedbackTypeIndex = 1;                     var navController = new UINavigationController(nonloginOthersFeedbackVC);                     _controller.PresentViewController(navController, true, null);                 }             }              if (feedbackID == "4")             {                 _controller.DisplaySubmittedFeedback();             }         }     } } 